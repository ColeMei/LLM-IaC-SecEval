You are an expert in Infrastructure-as-Code (IaC) security analysis.

## Task

Given an IaC script and the file name, identify **every line** where one or more of the following 9 security smells occur, based on the provided definitions.

**Output requirements:**

- For each smell found, output a single line in CSV format:
  NAME_OF_FILE,LINE_NUMBER,SMELL_CATEGORY
- If no smell is found in the file, return:
  NAME_OF_FILE,0,none
- List every finding on a separate line if multiple smells or instances are detected.
- Please output only your findings in the specified CSV format, with no additional explanation or commentary.

## Definitions of Security Smells

1. **Admin by default**: This smell is the recurring pattern of specifying default users as administrative users. It violates the “principle of least privilege” property. Consider this whenever more privileges are granted than necessary.

2. **Empty password**: The recurring pattern of using a password that is an empty string (zero length), indicating weakness.

3. **Hard-coded secret**: The recurring pattern of revealing sensitive information, such as usernames, passwords, or private cryptographic keys directly in the script.

4. **Missing default in case statement**: Not handling all input cases when implementing a case conditional logic.

5. **No integrity check**: Downloading content from the Internet without checking the downloaded content using checksums or signature verification (e.g., GPG).

6. **Suspicious comment**: Comments mentioning known defects, missing features, or system weaknesses (e.g., containing "TODO", "FIXME", "HACK").

7. **Unrestricted IP address**: Assigning IP address `0.0.0.0`, potentially exposing services to all networks.

8. **Use of HTTP without SSL/TLS**: Using HTTP instead of HTTPS, making communication insecure against man-in-the-middle attacks.

9. **Use of weak cryptography algorithms**: Using weak cryptography algorithms, such as MD5 or SHA-1, for encryption.

## Script for Analysis

File name: 
{bifrost-playbooks-roles-bifrost-keystone-install-defaults-main.yml}

File content: 
{---
keystone_source_install: true
# *_git_url can be overridden by local clones for offline installs
keystone_git_url: https://git.openstack.org/openstack/keystone
keystone_git_folder: /opt/stack/keystone

# set to true to skip installing ironic dependencies
skip_package_install: False
# set to true to skip generation of configs, ironic db and rabbitmq configuration
skip_bootstrap: False
# set to true to skip starting ironic services and dependencies
skip_start: False

# Parameters for connecting to mysql for database manipulation.
mysql_username: "root"
mysql_password: ""

# Support for CORS configuration
# By default CORS support is disabled.
enable_cors: false
# Origin to accept for CORS requests
cors_allowed_origin: "http://localhost:8000"
cors_allowed_origin2: "www.google.com"
# bifrost utilizes noauth mode by default and as such
# the setting should be set to false. This setting should
# not need to be modified by the user.
enable_cors_credential_support: false

# Defaults required by this role that are normally inherited via
# other roles.
file_url_port: 8080
http_boot_folder: /httpboot

# Settings related to installing bifrost in a virtual environment
enable_venv: false
bifrost_venv_dir: "{{ lookup('env', 'VENV') | default('/opt/stack/bifrost') }}"
bifrost_venv_env:
  VIRTUAL_ENV: "{{ bifrost_venv_dir }}"
  PATH: "{{ bifrost_venv_dir }}/bin:{{ ansible_env.PATH }}" # include regular path via lookup env
  pydoc: "python -m pydoc"


keystone:
  debug: true
  bootstrap:
    enabled: true
    username: admin
    password: ChangeThisPa55w0rd
    project_name: admin
    admin_url: "http://127.0.0.1:35357/v3/"
    public_url: "http://127.0.0.1:5000/v3/"
    internal_url: "http://127.0.0.1:5000/v3/"
    region_name: "RegionOne"
  message_queue:
    username: keystone
    password: ChangeThisPa55w0rd
    host: localhost
    port: 5672
  database:
    name: keystone
    username: keystone
    password: ChangeThisPa55w0rd
    host: localhost

# NOTE(hwoarang): openSUSE distros may come with recent pip versions so
# upgrade only what's necessary
pip_opts: "{{ ((ansible_os_family | lower == 'suse') or (enable_venv | bool)) | ternary('--upgrade-strategy only-if-needed', '--force-reinstall') }}"

}
