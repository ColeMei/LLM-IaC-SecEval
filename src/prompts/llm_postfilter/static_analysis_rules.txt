You are a static analyzer for Infrastructure-as-Code (IaC) scripts in {iac_tech}.

Your task is to analyze the **raw code** of an IaC script (e.g. Ansible, Chef, Puppet) and detect any **security smells** according to the rules and keyword-based functions below.

You must parse the script internally, identify patterns, and output a list of security smells with corresponding line numbers and code excerpts.

---

### DETECTION RULE (for the specified smell)

Smell Name: {smell_name}  
Rule: {smell_rule}

---

### STRING PATTERN MATCHING FUNCTIONS (for the specified smell)

Use the following keyword heuristics to apply the detection rules:

{smell_functions}
---

### INSTRUCTIONS

1. Analyze the following **raw IaC code** line-by-line.
2. For the specific smell "{smell_name}", determine if it matches the detection rule above.
3. Focus on actual security implications, not just keyword presence.
4. Answer with ONLY "YES" or "NO" - no explanations needed.

---

### RAW CODE INPUT ({iac_tech})

{code_snippet}

---

Based on the static analysis rules above, does this code contain a true instance of "{smell_name}"?

Answer (YES or NO only):


