You are an expert in Infrastructure-as-Code (IaC) security analysis.

# Task

Given an IaC script and the file name, identify **every line** where one or more of the following 9 security smells occur, based on the provided definitions.

**Output requirements:**

- For each smell found, output a single line in CSV format:
  NAME_OF_FILE,LINE_NUMBER,SMELL_CATEGORY
- If no smell is found in the file, return:
  NAME_OF_FILE,0,none
- List every finding on a separate line if multiple smells or instances are detected.
- Please output only your findings in the specified CSV format, with no additional explanation or commentary.

# Definitions of Security Smells

1. **Admin by default**: This smell is the recurring pattern of specifying default users as administrative users. The smell can violate the “principle of least privilege” property." We can consider this smell everytime more privileges are being given than it should be necessary.

2. **Empty password**: This smell is the recurring pattern of using a string of length zero for a password. An empty password is indicative of a weak password.

3. **Hard-coded secret**: This smell is the recurring pattern of revealing sensitive information, such as user name and passwords in IaC scripts. We consider three types of hard-coded secrets: hard-coded passwords, hard-coded user names, and hard-coded private cryptography keys.

4. **Missing default in case statement**: This smell is the recurring pattern of not handling all input combinations when implementing a case conditional logic.

5. **No integrity check**: This smell is the recurring pattern of downloading content from the Internet and not checking the downloaded content using checksums or gpg signatures.

6. **Suspicious comment**: This smell is the recurring pattern of putting information in comments about the presence of defects, missing functionality, or weakness ofthe system. Examples of such comments include putting keywords such as “TODO,” “FIXME,” and “HACK” in comments.

7. **Unrestricted IP address**: This smell is the recurring pattern of assigning the address 0.0.0.0 for a database server or a cloud service/instance. Binding to the address 0.0.0.0 may cause security concerns as this address can allow connections from every possible network.

8. **Use of HTTP without SSL/TLS**: This smell is the recurring pattern of using HTTP without the Transport Layer Security (TLS) or Secure Sockets Layer (SSL). Such use makes the communication between two entities less secure, as without SSL/TLS, use of HTTP is susceptible to man-in-the-middle attacks.

9. **Use of weak cryptography algorithms**: This smell is the recurring pattern of using weak cryptography algorithms, namely, MD5 and SHA-1, for encryption purposes.

# Script for Analysis

File name: ansible-role-container-registry-tasks-docker-distribution.yml

File content: 
# tasks file for ansible-role-container-registry

- name: ensure docker-distribution is installed
  package:
    name: docker-distribution
    state: present

- name: manage /etc/docker-distribution/registry/config.yml
  template:
    src: docker-distribution-config.yml.j2
    dest: /etc/docker-distribution/registry/config.yml
  notify: restart docker-distribution service

- name: force systemd to reread configs
  meta: flush_handlers

- name: enable and start docker-distribution
  systemd:
    enabled: true
    state: started
    name: docker-distribution

